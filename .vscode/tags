!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Any	../src/text_transformer.py	/^from typing import List, Any, Callable$/;"	kind:namespace	line:2
Callable	../src/text_transformer.py	/^from typing import List, Any, Callable$/;"	kind:namespace	line:2
Counter	../src/corpora.py	/^from collections import Counter$/;"	kind:namespace	line:1
Counter	../src/transforms/spellfix.py	/^from collections import Counter$/;"	kind:namespace	line:1
Levenshtein	../src/transforms/spellfix.py	/^import Levenshtein$/;"	kind:namespace	line:3
List	../src/text_transformer.py	/^from typing import List, Any, Callable$/;"	kind:namespace	line:2
List	../test/data.py	/^from typing import List$/;"	kind:namespace	line:2
List	../test/extract_corpora_from_xlsx.py	/^from typing import List$/;"	kind:namespace	line:2
Path	../src/corpora.py	/^from pathlib import Path$/;"	kind:namespace	line:2
Path	../test/data.py	/^from pathlib import Path$/;"	kind:namespace	line:1
Path	../test/extract_corpora_from_xlsx.py	/^from pathlib import Path$/;"	kind:namespace	line:1
PhoneticTextTransformer	../src/text_transformer.py	/^class PhoneticTextTransformer(TextTransformer):$/;"	kind:class	line:34
TextTransformer	../src/text_transformer.py	/^class TextTransformer:$/;"	kind:class	line:12
TfidfTextTransformer	../src/text_transformer.py	/^class TfidfTextTransformer(PhoneticTextTransformer):$/;"	kind:class	line:44
TfidfVectorizer	../src/text_transformer.py	/^from sklearn.feature_extraction.text import TfidfVectorizer$/;"	kind:namespace	line:4
ToktokTokenizer	../src/corpora.py	/^from nltk import ToktokTokenizer$/;"	kind:namespace	line:5
ToktokTokenizer	../src/transforms/normalize.py	/^from nltk import ToktokTokenizer$/;"	kind:namespace	line:2
ToktokTokenizer	../test/extract_corpora_from_xlsx.py	/^from nltk import ToktokTokenizer$/;"	kind:namespace	line:5
WmdTextTransformer	../src/text_transformer.py	/^class WmdTextTransformer(PhoneticTextTransformer):$/;"	kind:class	line:65
__init__	../src/text_transformer.py	/^    def __init__(self):$/;"	kind:member	line:13
__init__	../src/text_transformer.py	/^    def __init__(self, corpora):$/;"	kind:member	line:35
__init__	../src/text_transformer.py	/^    def __init__(self, corpora):$/;"	kind:member	line:66
__init__	../src/text_transformer.py	/^    def __init__(self, corpora, stop_words=None, pretrained_tfidf=None):$/;"	kind:member	line:45
__init__.py	../src/__init__.py	1;"	kind:file	line:1
__init__.py	../src/transforms/__init__.py	1;"	kind:file	line:1
_defeanate_consonants	../src/transforms/phonetize.py	/^def _defeanate_consonants(word):$/;"	kind:function	line:40
_delete_hard_and_soft_sign	../src/transforms/phonetize.py	/^def _delete_hard_and_soft_sign(word):$/;"	kind:function	line:107
_load_globo_data	../test/extract_corpora_from_xlsx.py	/^def _load_globo_data() -> List[str]:$/;"	kind:function	line:16
_load_leasing_data	../test/extract_corpora_from_xlsx.py	/^def _load_leasing_data() -> List[List[str]]:$/;"	kind:function	line:9
_remove_doubles	../src/transforms/phonetize.py	/^def _remove_doubles(word):$/;"	kind:function	line:95
_remove_non_russian_chars	../src/transforms/basic_normalize.py	/^def _remove_non_russian_chars(source):$/;"	kind:function	line:12
_replace_chars	../src/transforms/phonetize.py	/^def _replace_chars(word):$/;"	kind:function	line:23
_replace_end	../src/transforms/phonetize.py	/^def _replace_end(word, old, new):$/;"	kind:function	line:116
_simplify_endings	../src/transforms/phonetize.py	/^def _simplify_endings(word):$/;"	kind:function	line:68
_tfidf_fit	../src/text_transformer.py	/^    def _tfidf_fit(self, groups: List[List[str]]):$/;"	kind:member	line:56
_tfidf_transform	../src/text_transformer.py	/^    def _tfidf_transform(self, s):$/;"	kind:member	line:61
alphabet	../test/extract_corpora_from_xlsx.py	/^    alphabet = 'йцукенгшщзхъфывапролджэёячсмитьбю'$/;"	kind:variable	line:31
apply_transforms_before_func	../src/text_transformer.py	/^    def apply_transforms_before_func(self, s: str, stopFunc: Callable) -> Any:$/;"	kind:member	line:26
basic_normalize	../src/text_transformer.py	/^from spellcheck.transforms.basic_normalize import basic_normalize$/;"	kind:namespace	line:6
basic_normalize	../src/transforms/basic_normalize.py	/^def basic_normalize(s: str) -> str:$/;"	kind:function	line:4
basic_normalize.py	../src/transforms/basic_normalize.py	1;"	kind:file	line:1
corpora.py	../src/corpora.py	1;"	kind:file	line:1
data.py	../test/data.py	1;"	kind:file	line:1
extract_corpora_from_xlsx.py	../test/extract_corpora_from_xlsx.py	1;"	kind:file	line:1
fit	../src/text_transformer.py	/^    def fit(self, groups: List[List[str]]):$/;"	kind:member	line:17
load_corpora	../src/corpora.py	/^def load_corpora() -> Counter:$/;"	kind:function	line:10
load_globo_data	../test/data.py	/^def load_globo_data() -> List[List[str]]:$/;"	kind:function	line:18
load_leasing_data	../test/data.py	/^def load_leasing_data() -> List[List[str]]:$/;"	kind:function	line:11
load_phonetized_normalized_corpora	../src/corpora.py	/^def load_phonetized_normalized_corpora() -> Counter:$/;"	kind:function	line:43
load_questions_data	../test/data.py	/^def load_questions_data() -> List[List[str]]:$/;"	kind:function	line:7
normalize	../src/text_transformer.py	/^from spellcheck.transforms.normalize import normalize$/;"	kind:namespace	line:7
normalize	../src/transforms/normalize.py	/^def normalize(s: str) -> str:$/;"	kind:function	line:5
normalize.py	../src/transforms/normalize.py	1;"	kind:file	line:1
normalize_corpora	../src/corpora.py	/^def normalize_corpora(corpora: Counter) -> Counter:$/;"	kind:function	line:28
partial	../src/text_transformer.py	/^from functools import partial$/;"	kind:namespace	line:1
pd	../test/data.py	/^import pandas as pd$/;"	kind:namespace	line:4
pd	../test/extract_corpora_from_xlsx.py	/^import pandas as pd$/;"	kind:namespace	line:4
phonetize	../src/corpora.py	/^from spellcheck.transforms.phonetize import phonetize$/;"	kind:namespace	line:7
phonetize	../src/text_transformer.py	/^from spellcheck.transforms.phonetize import phonetize$/;"	kind:namespace	line:9
phonetize	../src/transforms/phonetize.py	/^def phonetize(sentence):$/;"	kind:function	line:1
phonetize.py	../src/transforms/phonetize.py	1;"	kind:file	line:1
phonetize_corpora	../src/corpora.py	/^def phonetize_corpora(corpora: Counter) -> Counter:$/;"	kind:function	line:36
pymorphy2	../src/corpora.py	/^import pymorphy2$/;"	kind:namespace	line:4
pymorphy2	../src/transforms/normalize.py	/^import pymorphy2$/;"	kind:namespace	line:1
question	../test/extract_corpora_from_xlsx.py	/^        question = ''.join(c if c in alphabet else '' if c == '-' else ' ' for c in question)$/;"	kind:variable	line:36
question	../test/extract_corpora_from_xlsx.py	/^        question = question.lower()$/;"	kind:variable	line:35
question_groups	../test/extract_corpora_from_xlsx.py	/^    question_groups = _load_globo_data() + _load_leasing_data()$/;"	kind:variable	line:27
questions	../test/extract_corpora_from_xlsx.py	/^    questions = [q for group in question_groups for q in group]$/;"	kind:variable	line:28
rreplace	../src/utils.py	/^def rreplace(s, old, new, count=-1):$/;"	kind:function	line:1
spellfix	../src/text_transformer.py	/^from spellcheck.transforms.spellfix import spellfix$/;"	kind:namespace	line:8
spellfix	../src/transforms/spellfix.py	/^def spellfix(s: str, corpora: Counter) -> str:$/;"	kind:function	line:6
spellfix.py	../src/transforms/spellfix.py	1;"	kind:file	line:1
text_transformer.py	../src/text_transformer.py	1;"	kind:file	line:1
tokenizer	../test/extract_corpora_from_xlsx.py	/^    tokenizer = ToktokTokenizer()$/;"	kind:variable	line:30
transform	../src/text_transformer.py	/^    def transform(self, s: str) -> Any:$/;"	kind:member	line:21
translit	../src/transforms/basic_normalize.py	/^from transliterate import translit$/;"	kind:namespace	line:1
translit	../test/extract_corpora_from_xlsx.py	/^from transliterate import translit$/;"	kind:namespace	line:6
typo_making.py	../test/typo_making.py	1;"	kind:file	line:1
utils.py	../src/utils.py	1;"	kind:file	line:1
variants	../test/typo_making.py	/^def variants(word):$/;"	kind:function	line:1
words	../test/extract_corpora_from_xlsx.py	/^    words = set()$/;"	kind:variable	line:33
